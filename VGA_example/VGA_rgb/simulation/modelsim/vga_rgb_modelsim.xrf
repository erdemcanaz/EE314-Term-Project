vendor_name = ModelSim
source_file = 1, C:/Users/Levovo20x/Documents/GitHub/EE314-Term-Project/VGA_example/VGA_rgb/clock_divider.v
source_file = 1, C:/Users/Levovo20x/Documents/GitHub/EE314-Term-Project/VGA_example/VGA_rgb/db/vga_rgb.cbx.xml
design_name = clock_divider
instance = comp, \clk_25~output , clk_25~output, clock_divider, 1
instance = comp, \clk~input , clk~input, clock_divider, 1
instance = comp, \clk~inputCLKENA0 , clk~inputCLKENA0, clock_divider, 1
instance = comp, \Add0~97 , Add0~97, clock_divider, 1
instance = comp, \Add0~33 , Add0~33, clock_divider, 1
instance = comp, \Add0~65 , Add0~65, clock_divider, 1
instance = comp, \counter_value_25MHZ[16] , counter_value_25MHZ[16], clock_divider, 1
instance = comp, \Add0~85 , Add0~85, clock_divider, 1
instance = comp, \counter_value_25MHZ[17] , counter_value_25MHZ[17], clock_divider, 1
instance = comp, \Add0~81 , Add0~81, clock_divider, 1
instance = comp, \counter_value_25MHZ[18] , counter_value_25MHZ[18], clock_divider, 1
instance = comp, \Add0~77 , Add0~77, clock_divider, 1
instance = comp, \counter_value_25MHZ[19] , counter_value_25MHZ[19], clock_divider, 1
instance = comp, \Add0~73 , Add0~73, clock_divider, 1
instance = comp, \counter_value_25MHZ[20] , counter_value_25MHZ[20], clock_divider, 1
instance = comp, \Add0~69 , Add0~69, clock_divider, 1
instance = comp, \counter_value_25MHZ[21] , counter_value_25MHZ[21], clock_divider, 1
instance = comp, \Add0~61 , Add0~61, clock_divider, 1
instance = comp, \counter_value_25MHZ[22] , counter_value_25MHZ[22], clock_divider, 1
instance = comp, \Add0~125 , Add0~125, clock_divider, 1
instance = comp, \counter_value_25MHZ[23] , counter_value_25MHZ[23], clock_divider, 1
instance = comp, \Add0~121 , Add0~121, clock_divider, 1
instance = comp, \counter_value_25MHZ[24] , counter_value_25MHZ[24], clock_divider, 1
instance = comp, \Add0~117 , Add0~117, clock_divider, 1
instance = comp, \counter_value_25MHZ[25] , counter_value_25MHZ[25], clock_divider, 1
instance = comp, \Add0~113 , Add0~113, clock_divider, 1
instance = comp, \counter_value_25MHZ[26] , counter_value_25MHZ[26], clock_divider, 1
instance = comp, \Add0~109 , Add0~109, clock_divider, 1
instance = comp, \counter_value_25MHZ[27] , counter_value_25MHZ[27], clock_divider, 1
instance = comp, \Add0~57 , Add0~57, clock_divider, 1
instance = comp, \counter_value_25MHZ[28] , counter_value_25MHZ[28], clock_divider, 1
instance = comp, \Add0~105 , Add0~105, clock_divider, 1
instance = comp, \counter_value_25MHZ[29] , counter_value_25MHZ[29], clock_divider, 1
instance = comp, \Add0~101 , Add0~101, clock_divider, 1
instance = comp, \counter_value_25MHZ[30] , counter_value_25MHZ[30], clock_divider, 1
instance = comp, \Add0~5 , Add0~5, clock_divider, 1
instance = comp, \counter_value_25MHZ[31] , counter_value_25MHZ[31], clock_divider, 1
instance = comp, \LessThan0~0 , LessThan0~0, clock_divider, 1
instance = comp, \LessThan0~4 , LessThan0~4, clock_divider, 1
instance = comp, \LessThan0~3 , LessThan0~3, clock_divider, 1
instance = comp, \LessThan0~2 , LessThan0~2, clock_divider, 1
instance = comp, \LessThan0~5 , LessThan0~5, clock_divider, 1
instance = comp, \LessThan0~6 , LessThan0~6, clock_divider, 1
instance = comp, \counter_value_25MHZ[0] , counter_value_25MHZ[0], clock_divider, 1
instance = comp, \Add0~93 , Add0~93, clock_divider, 1
instance = comp, \counter_value_25MHZ[1] , counter_value_25MHZ[1], clock_divider, 1
instance = comp, \Add0~89 , Add0~89, clock_divider, 1
instance = comp, \counter_value_25MHZ[2] , counter_value_25MHZ[2], clock_divider, 1
instance = comp, \Add0~1 , Add0~1, clock_divider, 1
instance = comp, \counter_value_25MHZ[3] , counter_value_25MHZ[3], clock_divider, 1
instance = comp, \Add0~29 , Add0~29, clock_divider, 1
instance = comp, \counter_value_25MHZ[4] , counter_value_25MHZ[4], clock_divider, 1
instance = comp, \Add0~25 , Add0~25, clock_divider, 1
instance = comp, \counter_value_25MHZ[5] , counter_value_25MHZ[5], clock_divider, 1
instance = comp, \Add0~21 , Add0~21, clock_divider, 1
instance = comp, \counter_value_25MHZ[6] , counter_value_25MHZ[6], clock_divider, 1
instance = comp, \Add0~17 , Add0~17, clock_divider, 1
instance = comp, \counter_value_25MHZ[7] , counter_value_25MHZ[7], clock_divider, 1
instance = comp, \Add0~13 , Add0~13, clock_divider, 1
instance = comp, \counter_value_25MHZ[8] , counter_value_25MHZ[8], clock_divider, 1
instance = comp, \Add0~9 , Add0~9, clock_divider, 1
instance = comp, \counter_value_25MHZ[9] , counter_value_25MHZ[9], clock_divider, 1
instance = comp, \Add0~53 , Add0~53, clock_divider, 1
instance = comp, \counter_value_25MHZ[10] , counter_value_25MHZ[10], clock_divider, 1
instance = comp, \Add0~49 , Add0~49, clock_divider, 1
instance = comp, \counter_value_25MHZ[11] , counter_value_25MHZ[11], clock_divider, 1
instance = comp, \Add0~45 , Add0~45, clock_divider, 1
instance = comp, \counter_value_25MHZ[12] , counter_value_25MHZ[12], clock_divider, 1
instance = comp, \Add0~41 , Add0~41, clock_divider, 1
instance = comp, \counter_value_25MHZ[13] , counter_value_25MHZ[13], clock_divider, 1
instance = comp, \Add0~37 , Add0~37, clock_divider, 1
instance = comp, \counter_value_25MHZ[14] , counter_value_25MHZ[14], clock_divider, 1
instance = comp, \counter_value_25MHZ[15] , counter_value_25MHZ[15], clock_divider, 1
instance = comp, \LessThan0~1 , LessThan0~1, clock_divider, 1
instance = comp, \counter_value_25MHZ[31]~DUPLICATE , counter_value_25MHZ[31]~DUPLICATE, clock_divider, 1
instance = comp, \clk_25~0 , clk_25~0, clock_divider, 1
instance = comp, \clk_25~reg0 , clk_25~reg0, clock_divider, 1
instance = comp, \~QUARTUS_CREATED_GND~I , ~QUARTUS_CREATED_GND~I, clock_divider, 1
